// Q. 강의 자료의 막대 자르기 문제와 의사 코드를 참고하여, 다음과 같은 두 가지 조건이 추가된 경우에 대해,
//    막대의 길이 n이 입력될 때, 이에 대한 최적의 해(가격 및 방법)를 구해주는 동적프로그램을 작성하세요.
//	  (i) 막대를 한번 자를 때마다 가공비가 2원씩 차감된다.
//        (예를 들어, 길이 2인 막대를 1짜리 막대 두 개로 나누어 판매할 경우, 총 판매 수입은 1+1-2 = 0 이다.
//	  (ii) 입력된 막대의 길이 n이 이하 주어진 막대 길이 별 가격보다 더 클 수 있으며, 길이가 10보다 큰 막대의 판매가격은 0원이다.
#include <iostream>
#include <cmath>
using namespace std;

void CutRod(int *p, int n, int *r, int *s) { // 가격 배열 p, 막대의 길이 n, 미리 계산해놓을 배열 r, 잘라낸 조각의 최적 크기를 보관할 배열 s
    r[0] = 0;
    for (int j = 1; j < n+1; j++) {
        long double q = -1 * INFINITY;   // 최대 가격을 찾아 담을 변수 - 최소값으로 초기화
        for (int i = 1; i <= j; i++) {
            int currentPrice = (i <= 10) ? p[i] : 0;    // 길이가 10보다 큰 막대의 가격은 0원
            if (q < currentPrice + r[j-i] - 2 * (j != n)) { // 막대를 나눌 때만 가공비 2원 차감
                q = currentPrice + r[j-i] - 2 * (j != n);
                s[j] = i;   // 잘라낸 첫 번째 조각의 최적 크기 i를 보관
            }
        }
        r[j] = q;   // 최적의 해 대입
    }
}

int main() {
    // 변수 선언 입력 : n을 100까지만 입력할 수 있다고 가정하였다.
    int n;  // 막대의 길이
    cin >> n;

    // 가격 배열 p
    int p[11] = {0, 1, 5, 8, 9, 10, 17, 17, 20, 24, 30};

    // 막대의 길이 배열 r, 어디서 잘랐는지 기록할 배열 s
    int r[101] = {0, };
    int s[101] = {0, };

    // 함수 실행
    CutRod(p, n, r, s);

    // 출력
    cout << "길이 : " << n << ", 최대 가격 : " << r[n] << endl;
    cout << "방법 : ";
    while (n > 0) {
        cout << s[n];
        n -= s[n];
        if (n > 0)
            cout << ", ";
    }
    cout << endl;

    return 0;
}